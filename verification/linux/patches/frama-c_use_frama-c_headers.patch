Use string functions from Frama-C and remove usage of x86 ASM code.

When doing this, some things such as limits get defined several times.
Prevent this by always using Frama-C headers.

--- a/arch/x86/include/asm/string_32.h
+++ b/arch/x86/include/asm/string_32.h
@@ -3,6 +3,10 @@
 
 #ifdef __KERNEL__
 
+#ifdef __FRAMAC__
+#include <frama-c-lib/string.h>
+#else
+
 /* Let gcc decide whether to inline or use the out of line functions */
 
 #define __HAVE_ARCH_STRCPY
@@ -337,6 +341,8 @@ void *__constant_c_and_count_memset(void
 #define __HAVE_ARCH_MEMSCAN
 extern void *memscan(void *addr, int c, size_t size);
 
+#endif /* __FRAMAC__ */
+
 #endif /* __KERNEL__ */
 
 #endif /* _ASM_X86_STRING_32_H */
--- a/include/linux/kernel.h
+++ b/include/linux/kernel.h
@@ -15,6 +15,9 @@
 #include <asm/byteorder.h>
 #include <uapi/linux/kernel.h>
 
+#ifdef __FRAMAC__
+#include <frama-c-lib/limits.h>
+#else
 #define USHRT_MAX	((u16)(~0U))
 #define SHRT_MAX	((s16)(USHRT_MAX>>1))
 #define SHRT_MIN	((s16)(-SHRT_MAX - 1))
@@ -27,6 +30,7 @@
 #define LLONG_MAX	((long long)(~0ULL>>1))
 #define LLONG_MIN	(-LLONG_MAX - 1)
 #define ULLONG_MAX	(~0ULL)
+#endif /* __FRAMAC__ */
 #define SIZE_MAX	(~(size_t)0)
 
 #define U8_MAX		((u8)~0U)
