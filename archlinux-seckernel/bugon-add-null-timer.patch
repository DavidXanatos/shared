Adding a timer with a NULL function causes a NULL pointer dereference panic
later, in call_timer_fn (called by __run_timers). To improve debugging, panic
earlier to retrieve which caller adds an invalid timer.
--- a/kernel/timer.c
+++ b/kernel/timer.c
@@ -344,6 +344,12 @@ __internal_add_timer(struct tvec_base *b
 	unsigned long idx = expires - base->timer_jiffies;
 	struct list_head *vec;
 
+	if (unlikely(timer->function == NULL)) {
+		printk(KERN_CRIT "OOPS: Attempting to add a NULL timer\n");
+		printk(KERN_CRIT "OOPS: Called __internal_add_timer(%p, %p)\n", base, timer);
+		BUG();
+	}
+
 	if (idx < TVR_SIZE) {
 		int i = expires & TVR_MASK;
 		vec = base->tv1.vec + i;
